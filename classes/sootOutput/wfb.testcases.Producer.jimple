class wfb.testcases.Producer extends java.lang.Object implements java.lang.Runnable
{
    java.util.List cache;

    public void <init>(java.util.List)
    {
        wfb.testcases.Producer r0;
        java.util.List r1;

        r0 := @this: wfb.testcases.Producer;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<wfb.testcases.Producer: java.util.List cache> = r1;

        return;
    }

    public void run()
    {
        wfb.testcases.Producer r0;
        int i0;

        r0 := @this: wfb.testcases.Producer;

        i0 = 0;

     label1:
        if i0 >= 1 goto label2;

        specialinvoke r0.<wfb.testcases.Producer: void produce()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void produce()
    {
        wfb.testcases.Producer r0;
        java.util.List $r1, $r3, $r5, $r7, $r8;
        int $i0, $i1;
        java.util.Random $r4;
        java.lang.Integer $r6;
        java.lang.Throwable $r9;
        java.lang.Exception $r11;

        r0 := @this: wfb.testcases.Producer;

        $r1 = r0.<wfb.testcases.Producer: java.util.List cache>;

        entermonitor $r1;

     label1:
        $r3 = r0.<wfb.testcases.Producer: java.util.List cache>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r8 = r0.<wfb.testcases.Producer: java.util.List cache>;

        virtualinvoke $r8.<java.lang.Object: void wait()>();

        goto label1;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $r5 = r0.<wfb.testcases.Producer: java.util.List cache>;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        $i1 = virtualinvoke $r4.<java.util.Random: int nextInt()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<wfb.testcases.Producer: java.util.List cache>;

        virtualinvoke $r7.<java.lang.Object: void notify()>();

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label5:
        exitmonitor $r1;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r9;

     label9:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
